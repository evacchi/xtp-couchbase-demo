// THIS FILE WAS GENERATED BY `xtp-go-bindgen`. DO NOT EDIT.
package main

import (
	pdk "github.com/extism/go-pdk"
)

//export transform
func _Transform() int32 {
	var err error
	_ = err
	pdk.Log(pdk.LogDebug, "Transform: getting JSON input")
	var input DataRecord
	err = pdk.InputJSON(&input)
	if err != nil {
		pdk.SetError(err)
		return -1
	}

	pdk.Log(pdk.LogDebug, "Transform: calling implementation function")
	err = Transform(input)
	if err != nil {
		pdk.SetError(err)
		return -1
	}

	pdk.Log(pdk.LogDebug, "Transform: returning")
	return 0
}

//go:wasmimport extism:host/user emit
func _Emit(uint64)

// A data record
type DataRecord struct {
	Doc  string `json:"doc"`
	Meta string `json:"meta"`
}

// An emit key/value pair
type EmitRecord struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// Emit
// It takes input of EmitRecord (An emit key/value pair)
func Emit(input EmitRecord) error {
	var err error
	_ = err
	mem, err := pdk.AllocateJSON(&input)
	if err != nil {
		return err
	}

	_Emit(mem.Offset())

	return nil

}

// Note: leave this in place, as the Go compiler will find the `export` function as the entrypoint.
func main() {}
